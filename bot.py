import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from yookassa import Configuration, Payment
import urllib.parse  # –î–ª—è –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ URL
import logging

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ÆKassa –î–∞–Ω–Ω—ã–µ
Configuration.account_id = "496344"  # SHOP_ID
Configuration.secret_key = "live_v8fKRfAp1mE3Y0mCTPE-a0L8p3SnvA2XoxtUUAsdyk8"  # SECRET_KEY
CHANNEL_INVITE_LINK = "https://t.me/+m01bmpeUanVlYWMy"  # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets
def setup_google_sheets():
    credentials_file = "C:\\Users\\ASUS TUF\\Downloads\\bot-blog-443504-d3b23e48879c.json"  # –ü—É—Ç—å –∫ JSON-—Ñ–∞–π–ª—É
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    credentials = ServiceAccountCredentials.from_json_keyfile_name(credentials_file, scope)
    client = gspread.authorize(credentials)
    spreadsheet = client.open("date of bot")
    return spreadsheet.sheet1

def log_to_google_sheets(user_id, username, action):
    sheet = setup_google_sheets()
    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    sheet.append_row([user_id, username, action, timestamp])

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É
def create_payment_link(user_id):
    try:
        payment = Payment.create({
            "amount": {
                "value": "2990.00",  # –¶–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏
                "currency": "RUB"
            },
            "confirmation": {
                "type": "redirect",
                "return_url": f"https://your-server.com/payment-success/{user_id}"
            },
            "capture": True,
            "description": f"–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}",
        })

        return payment.confirmation["confirmation_url"]
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞: {e}")
        raise

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.chat_id
    username = update.message.chat.username
    log_to_google_sheets(user_id, username, "–ó–∞–ø—É—Å—Ç–∏–ª /start")

    keyboard = [["–û–ø–ª–∞—Ç–∏—Ç—å –î–æ—Å—Ç—É–ø", "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ", "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è‚ú®\n"
        "–≠—Ç–æ marryyme_bot, –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –æ–±—É—á–∞—é—â–∏–π –∫–∞–Ω–∞–ª –æ—Ç @marryyme.me ¬´–¢–≤–æ–π –ø—É—Ç—å –≤ –±–ª–æ–≥–∏–Ω–≥¬ª.\n\n"
        "–ü–æ–∫—É–ø–∫–∞ –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ –∏ –Ω–∞–≤—Å–µ–≥–¥–∞‚ô•Ô∏è"
    )
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_choice = update.message.text
    user_id = update.message.chat_id
    username = update.message.chat.username

    keyboard = [["–û–ø–ª–∞—Ç–∏—Ç—å –î–æ—Å—Ç—É–ø", "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ", "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    if user_choice == "–û–ø–ª–∞—Ç–∏—Ç—å –î–æ—Å—Ç—É–ø":
        log_to_google_sheets(user_id, username, "–ù–∞–∂–∞–ª '–û–ø–ª–∞—Ç–∏—Ç—å –î–æ—Å—Ç—É–ø'")

        try:
            # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É
            payment_link = create_payment_link(user_id)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–ª–∞—Ç—ë–∂–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
            await update.message.reply_text(
                f"üéâ –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –æ–±—É—á–∞—é—â–∏–π –∫–∞–Ω–∞–ª –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n\n"
                f"üí≥ **–¶–µ–Ω–∞:** 2990‚ÇΩ\n"
                f"üìÖ **–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** –ù–∞–≤—Å–µ–≥–¥–∞\n\n"
                f"[üîó –û–ø–ª–∞—Ç–∏—Ç—å –î–æ—Å—Ç—É–ø]({payment_link})",
                parse_mode="Markdown",
                reply_markup=reply_markup
            )
        except Exception as e:
            await update.message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
                reply_markup=reply_markup
            )

    elif user_choice == "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ":
        log_to_google_sheets(user_id, username, "–ù–∞–∂–∞–ª '–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ'")

        # –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
        channel_info_text = (
            "üìö **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ:**\n\n"
            "üé• –ò–∑—É—á–∏–≤ –≥–∞–π–¥, –≤—ã —É–∑–Ω–∞–µ—Ç–µ –≤—Å–µ —Ñ–∏—à–∫–∏ –∏ —Ç–æ–Ω–∫–æ—Å—Ç–∏ –≤–µ–¥–µ–Ω–∏—è Instagram. "
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø—Ä–æ–π—Ç–∏ –Ω–µ–ø—Ä–æ—Å—Ç–æ–π –ø—É—Ç—å –≤ –º–∏—Ä –±–ª–æ–≥–∏–Ω–≥–∞:\n\n"
            "üí° **–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã:**\n"
            "‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –æ—Ç –ê –¥–æ –Ø\n"
            "‚Ä¢ –ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è —Å—ä—ë–º–∫–∏\n"
            "‚Ä¢ –ö–∞–∫–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑\n"
            "‚Ä¢ –†–∞–∑–±–æ—Ä—ã –≤–∏–¥–µ–æ Reels, –∫–∞–∫ –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø\n"
            "‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º—ã Instagram\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–º–µ—Ä—ã –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ\n"
            "‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç—ã\n"
            "‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –≤–∞—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n"
            "‚Ä¢ –ö–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ –≤–∏–¥–µ–æ –≤ Stories –∏ Reels\n"
            "‚Ä¢ –õ–∞–π—Ñ—Ö–∞–∫–∏ –ø–æ –≤–∏–¥–µ–æ –∏ –æ–∑–≤—É—á–∫–µ\n\n"
            "üî• **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –≥–∞–π–¥–µ –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è –≤—Å–µ–≥–¥–∞!**\n"
            "–í–∞—à–∞ –ú–µ—Ä–∏ ‚ù§Ô∏è"
        )

        await update.message.reply_text(channel_info_text, parse_mode="Markdown", reply_markup=reply_markup)

    elif user_choice == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        log_to_google_sheets(user_id, username, "–ù–∞–∂–∞–ª '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å'")
        button = InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç", url="https://t.me/manemanvelovna")
        inline_reply_markup = InlineKeyboardMarkup([[button]])
        await update.message.reply_text(
            "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º:",
            reply_markup=inline_reply_markup
        )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    application = Application.builder().token("8072320649:AAG2Rd2QKCKesruNF4-PwmqtV9PRVQBQ84s").build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.run_polling(timeout=10, read_timeout=10)

if __name__ == '__main__':
    main()
